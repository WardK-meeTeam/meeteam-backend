name: Deploy to EC2


on:
  push:
    branches:
      - master
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17


      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 -d > ./src/main/resources/application-dev.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: AWS Resource 에 접근할 수 있게 AWS credentails 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t meeteam-server .
      - name: Docker 이미지에 Tag 붙이기
        run: docker tag meeteam-server ${{ steps.login-ecr.outputs.registry }}/meeteam-server:latest

      - name: ECR에 Docker 이미지 Push
        run: docker push ${{ steps.login-ecr.outputs.registry }}/meeteam-server:latest

      - name: EC2 배포 디렉터리 준비
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            mkdir -p /home/ubuntu/meeteam

      - name: 기존 compose.yml 삭제 (있으면)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: false
          script: |
            rm -f /home/ubuntu/meeteam/compose.yml

      - name: EC2에 compose.yml 업로드
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "compose.yml"
          target: "/home/ubuntu/meeteam"
          overwrite: true

      - name: SSH 로 EC2 에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            cd /home/ubuntu/meeteam
            docker compose -f compose.yml pull meeteam-server
            docker stop meeteam-server || true
            docker rm meeteam-server || true
            docker compose -f compose.yml up -d meeteam-server

spring:
    security:
        oauth2:
            client:
                registration:
                    google:
                        client-id: ${GOOGLE_CLIENT_ID}
                        client-secret: ${GOOGLE_CLIENT_SECRET}
                        scope:
                            - openid
                            - profile
                            - email
                        redirect-uri: https://api.meeteam.alom-sejong.com/login/oauth2/code/google  # 강제 지정
                    github:
                        client-id: ${GITHUB_CLIENT_ID}
                        client-secret: ${GITHUB_CLIENT_SECRET}
                        scope:
                            - user:email
                            - read:user
                        redirect-uri: https://api.meeteam.alom-sejong.com/login/oauth2/code/github  # 강제 지정

    datasource:
        url: ${DATASOURCE_URL}
        username: ${DATASOURCE_USERNAME}
        password: ${DATASOURCE_PASSWORD}
        driver-class-name: com.mysql.cj.jdbc.Driver

    ai:
        retry:
            max-attempts: 3
            initial-interval: 1000  # 1초로 단축
            multiplier: 1.5         # 배수 축소
            max-interval: 5000      # 5초로 단축
            backoff:
                initial-interval: 500ms  # 초기 간격 단축
                max-interval: 3s         # 최대 간격 단축
        openai:
            base-url: ${OPENAI_BASE_URL:https://api.openai.com}
            api-key: ${OPENAI_API_KEY}

            chat:
                options:
                    model: gpt-4o-mini      # 더 빠른 모델로 변경
                    temperature: 0.0
                    max-tokens: 2048        # 토큰 수 절반으로 축소
                    timeout: 30s            # 30초로 단축
                    connect-timeout: 30s
                    read-timeout: 30s       # 읽기 타임아웃 추가

    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        defer-datasource-initialization: false # false: 데이터소스 준비되자마자 data.sql 실행 // true: JPA/Hibernate 초기화 이후 실행
        properties:
            hibernate:
                format_sql: true
                default_batch_fetch_size: 500
        open-in-view: false
    sql:
        init:
            mode: never
    data:
        redis:
            host: redis
            port: 6379
    rabbitmq:
        host: ${SPRING_RABBITMQ_HOST:rabbitmq}  # Docker Compose 서비스명
        port: ${SPRING_RABBITMQ_PORT:5672}      # AMQP 포트
        username: ${SPRING_RABBITMQ_USERNAME:meeteam}
        password: ${SPRING_RABBITMQ_PASSWORD:meeteam123}
        virtual-host: /
        connection-timeout: 60000
        # STOMP 플러그인 포트 (WebSocket용)
        stomp:
            port: 61613

jwt:
    secret-key: ${JWT_SECRET_KEY}
    access-exp-time: ${JWT_ACCESS_EXP_TIME:36000000} # 액세스 토큰 만료 시간 (밀리초 단위, 예: 1시간)
    refresh-exp-time: ${JWT_REFRESH_EXP_TIME:604800000} # 리프레시 토큰 만료 시간



# AWS S3 설정
cloud:
    aws:
        credentials:
            access-key: ${AWS_ACCESS_KEY_ID}
            secret-key: ${AWS_SECRET_ACCESS_KEY}
        s3:
            bucket: ${S3_BUCKET:meeteam-bucket}
        region:
            static: ${AWS_REGION:ap-northeast-2}
        stack:
            auto: false

# 파일 업로드 설정
file:
    dir: ${FILE_UPLOAD_DIR:/home/ubuntu/meeteam/upload}
    upload:
        max-size: 10MB
        allowed-extensions: jpg,jpeg,png,gif,webp
        s3:
            base-url: https://${cloud.aws.s3.bucket}.s3.${cloud.aws.region.static}.amazonaws.com



springdoc:
    swagger-ui:
        path: /swagger-ui.html
    api-docs:
        path: /v3/api-docs

server:
    servlet:
        context-path: /
    tomcat:
        mbeanregistry:
            enabled: true
    forward-headers-strategy: framework


management:
    endpoints:
        web:
            exposure:
                include:
                    - "*"
    endpoint:
        health:
            show-components: always

logging:
    config: classpath:logback-spring.xml
    level:
        root: info
        p6spy: off
        org.springframework.security: info
        org.springframework.security.oauth2: info
        com.wardk.meeteam_backend.global.loginRegister: info
        com.wardk.meeteam_backend.global.filter: info

decorator:
    datasource:
        p6spy:
            enable-logging: true


github:
    webhook:
        secret: ${GITHUB_WEBHOOK_SECRET}
    token: ${GITHUB_TOKEN}
    app:
        id: ${GITHUB_APP_ID}
        private-key-pem: ${GITHUB_APP_PRIVATE_KEY_PEM}

app:
    oauth2:
        redirect:
            success-base-url: ${FRONTEND_BASE_URL}
            success-path: ${OAUTH2_SUCCESS_PATH}
            failure-base-url: ${FRONTEND_BASE_URL}
            failure-path: ${OAUTH2_FAILURE_PATH}
            failure-endpoint: ${OAUTH2_FAILURE_ENDPOINT}
        providers:
            google:
                name: "google"
                user-name-attribute: "name"
                email-attribute: "email"
                id-attribute: "sub"
            github:
                name: "github"
                user-name-attribute: "name"
                login-attribute: "login"
                email-attribute: "email"
                id-attribute: "id"

# CORS 설정 추가
cors:
    allowed-origins:
        - https://meeteam-front-test.vercel.app           # 실제 Vercel 도메인으로 변경 필요
        - https://*.vercel.app                 # Vercel 서브도메인들
        - https://meeteam.alom-sejong.com     # Route53으로 설정한 프론트엔드 커스텀 도메인
        - https://api.meeteam.alom-sejong.com  # 백엔드 도메인 (Swagger 등)
        - http://localhost:3000                  # 로컬 개발용
        - http://localhost:3001                  # 추가 로컬 개발용
        - https://localhost:3000                 # 로컬 개발용 (HTTPS)

    allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - OPTIONS
    allowed-headers:
        - "*"
    exposed-headers:
        - Authorization
        - Set-Cookie
        - X-Total-Count
    allow-credentials: true
    max-age: 3600


security:
    whitelist:
        - /webjars/**
        - /swagger-resources/**
        - /v3/api-docs/**
        - /swagger-ui/**
        - /swagger-ui.html
        - /actuator/**
        - /docs/**
        - /default-ui.css
        - /favicon.ico
        - /api/login
        - /api/auth/**
        - /
        - /uploads/**
        - /api/register
        - /api/project/register
        - /oauth2/**
        - /login/oauth2/**
        - /login/oauth2/code/**
        - /api/auth/oauth2/**
        - /api/webhooks/github
        - /api/v1/files/**
        - index.html
        - /api/projects/condition
